<AUR>
        
        Archlinux depende de compilar pacotes, o que demanda muito tempo. Pensando nisso, a comunidade BR criou um repositório chamado Chaotic-aur,
        com programas AUR pré-compilados pra facilitar a instalação. Vamos adicionar esse repo:
                
                sudo pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
                sudo pacman-key --lsign-key 3056513887B78AEB
                sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst'
                sudo pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst'

        Agora pra validar o repositório, precisamos sinalizá-lo na lista de repos no arquivo  /etc/pacman.conf (Aproveite e ative o easteregg ILoveCandy). 
        Cole as informações no fim do arquivo:
                
                [chaotic-aur]
                Include = /etc/pacman.d/chaotic-mirrorlist

        Salve o arquivo e dê o comando pra atualizar todos os repositórios:

                sudo pacman -Syu
                
<TIMESHIFT>
        
        "Se meu sistema não quebrar, olê olê olá..."
        Timeshift é por si só uma mão na roda. Mas podemos potencializar sua mecânica de snapshots em busca do sistema perfeito.
                
                sudo pacman -S timeshift grub-btrfs timeshift-autosnap && sudo grub-mkconfig

        Dessa forma toda vez que for encontrada uma atualização, um snapshot é feito na pré-instalação e adicionado no grub.
        Caso a atualização dê alguma pane no sistema, basta voltar no snapshot como se nada tivesse acontecido.


<TERMINAL>

        Atualmente, o Archlinux usa o bash por padrão; mas ele é um tanto tedioso. Vamos instalar o zsh, que é mais adaptado a mudança de tema:

                sudo pacman -S zsh
        
        mude o interpretador padrão pra zsh:

                chsh -s $(which zsh)
        
        Agora instalamos o modificador do zsh, o programa Oh my zsh (caso não tenha instalado, instale primeiro o curl):

                sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

        Instalamos também os plugins pra melhor funcionalidade:
                
                git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
                git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
                git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
                git clone https://github.com/supercrabtree/k $ZSH_CUSTOM/plugins/k
                git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k


        Pra finalizar, editamos o arquivo pra sinalizar os plugins e ativar o tema (pra funcionar 100%, instale as fontes MesloLGS)
        sudo nano ~/.zshrc

                plugins=( git
                        zsh-syntax-highlighting
                        fzf
                        zsh-autosuggestions
                        k)

                ZSH_THEME="powerlevel10k/powerlevel10k"

<GITHUB>

        Crie uma chave pública no terminal:

                ssh-keygen -t ed25519 -C "email@algumacoisa.com"

        copie o conteúdo da chave publica e cole em ssh keys no github; então, clone o repo usando um terminal:

                git clone git@github.com:nome-do-repositorio.com


        Faça alguma alteração só pra marcar

                git commit -am "Added a simple title"

        Na primeira vez ele vai travar a alteração com o texto  "*** Please tell me who you are". Basta se identificar com os comandos seguindo suas informações:
    
                git config --global user.email "you@example.com"
                git config --global user.name "Your Name"


        Agora é só subir a alteração pro seu repositório
    
                git push


<VENV>

        Use o comando python -m venv nome_do_ambiente para criar um ambiente virtual com o nome desejado.
        Substitua nome_do_ambiente pelo nome que você escolher para o ambiente virtual.

                python -m venv meu_ambiente_virtual

        Pra ativar o ambiente, digite o comando:

                source meu_ambiente_virtual/bin/activate
    
        bibliotecas python
        
                sudo pacman -S python-pip python-pylint

<IDE>

        O curso pede pra instalar a IDE pycharm, mas sinceramente eu prefiro o VScodium. VScodium é a versão livre (e bem mais leve) do produto VS code, da Microsoft.
        Pra instalar diretamente do terminal, habilite o repositório aur (chaotic-aur é excelente!).

                sudo pacman -S vscodium


<CUSTOMIZAÇÃO NO CODIUM>

        Plugins basicos:

                portuguese (Brazil)

                Material Icon theme

                Dracula Theme Official



        Configurações:

                Font size: 16

                Ícones no terminal:
                        Enter terminal.integrated.fontFamily in the search box at the top of Settings tab and set the value below to MesloLGS NF

